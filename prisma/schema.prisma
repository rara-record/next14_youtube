// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// @@map 속성은 Prisma 모델이 데이터베이스 테이블 이름과 다르게 설정하고 싶을 때 사용
//

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           Int     @id @default(autoincrement())
  sessionToken String  @unique
  userId       Int
  expires      DateTime
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

enum Roles {
  admin
  superadmin
  member
}

model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  emailVerified DateTime?
  image         String?
  role          Roles       @default(member)
  accounts      Account[]
  sessions      Session[]
  videos        Video[] 

  @@map("users")
}

model Thumbnails {
  id             Int     @id @default(autoincrement())
  defaultUrl     String
  defaultWidth   Int
  defaultHeight  Int
  mediumUrl      String
  mediumWidth    Int
  mediumHeight   Int
  highUrl        String
  highWidth      Int
  highHeight     Int
  standardUrl    String?
  standardWidth  Int?
  standardHeight Int?
  maxresUrl      String?
  maxresWidth    Int?
  maxresHeight   Int?
  video          Video[]

  @@map("thumbnails")
}

model Video {
  id            Int        @id @default(autoincrement())
  userId        Int
  url           String     @unique
  count         Int        @default(1)
  title         String
  description   String
  tags          String[]
  channelId     String
  channelTitle  String
  embeddable    Boolean
  viewCount     String
  likeCount     String
  favoriteCount String
  thumbnailsId  Int
  createdAt     DateTime   @default(now())
  thumbnails    Thumbnails @relation(fields: [thumbnailsId], references: [id], onDelete: Cascade)
  user          User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("videos")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_token")
}
